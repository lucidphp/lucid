#!/usr/bin/env sh

set -e

# clean up subsplit files
cleanUp() {
	rm -rf ./.subsplit
}

# abort if error and clean up subsplit files
abortIf() {
	if [[ ! "$1" = 0 ]]; then
        echo "error"
		cleanUp
		echo $2
		exit $1
	fi
	return 0
}

GIT=`which git`
SUBSPLIT=`$GIT subsplit init git@github.com:lucidphp/lucid.git`
# abort if subsplit init failed
abortIf $? $SUBSPLIT

BRANCH=`$GIT rev-parse --abbrev-ref HEAD`
echo "current branch is $BRANCH"

DIRS=`ls -d lucid/*/`

for d in `ls -d lucid/* | xargs`; do

    if [[ ! `$GIT ls-files $d/composer.json --error-unmatch 2>/dev/null; echo $?` ]]; then
        continue
    fi

    name=`basename $d`
	RET=`$GIT subsplit publish --no-tags --heads="$BRANCH" "$d":git@github.com:lucidphp/"$name".git`
    abortIf $? $RET
done
cleanUp
exit 0
